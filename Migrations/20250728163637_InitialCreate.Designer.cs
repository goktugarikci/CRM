// <auto-generated />
using System;
using CRM.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRM.Migrations
{
    [DbContext(typeof(CRMAppDbContext))]
    [Migration("20250728163637_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CRM.Models.Ajanda", b =>
                {
                    b.Property<int>("AjandaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AjandaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AjandaId"));

                    b.Property<string>("Departman")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HatirlatmaGunu")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly?>("HatirlatmaTarihi")
                        .HasColumnType("date");

                    b.Property<string>("NotBaslik")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NotIcerik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OlusturanKullaniciId")
                        .HasColumnType("int")
                        .HasColumnName("OlusturanKullaniciID");

                    b.Property<DateOnly>("OlusturulmaTarihi")
                        .HasColumnType("date");

                    b.Property<bool?>("Tamamlandi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("AjandaId")
                        .HasName("PK__Ajanda__DCC2ABA52D80C9E0");

                    b.HasIndex("OlusturanKullaniciId");

                    b.ToTable("Ajanda");
                });

            modelBuilder.Entity("CRM.Models.CariHesaplar", b =>
                {
                    b.Property<int>("CariHesapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CariHesapID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CariHesapId"));

                    b.Property<decimal?>("Bakiye")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("CariKodu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CariTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("SirketId")
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    b.Property<string>("Unvan")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("VergiDairesi")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("VergiNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("CariHesapId")
                        .HasName("PK__CariHesa__613698EB03E3BBE8");

                    b.HasIndex(new[] { "SirketId", "CariKodu" }, "UQ__CariHesa__243A98D632F43645")
                        .IsUnique();

                    b.ToTable("CariHesaplar", (string)null);
                });

            modelBuilder.Entity("CRM.Models.DemirbasAtamaGecmisi", b =>
                {
                    b.Property<int>("AtamaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AtamaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AtamaId"));

                    b.Property<int?>("AlanKullaniciId")
                        .HasColumnType("int")
                        .HasColumnName("AlanKullaniciID");

                    b.Property<int>("DemirbasId")
                        .HasColumnType("int")
                        .HasColumnName("DemirbasID");

                    b.Property<string>("GeriAlinmaNotu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GeriAlinmaTarihi")
                        .HasColumnType("datetime");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int")
                        .HasColumnName("PersonelID");

                    b.Property<int>("SirketId")
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    b.Property<int?>("VerenKullaniciId")
                        .HasColumnType("int")
                        .HasColumnName("VerenKullaniciID");

                    b.Property<string>("VerilisNotu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VerilisTarihi")
                        .HasColumnType("datetime");

                    b.HasKey("AtamaId")
                        .HasName("PK__Demirbas__00DE786B4EF94EB7");

                    b.ToTable("DemirbasAtamaGecmisi", (string)null);
                });

            modelBuilder.Entity("CRM.Models.Demirbaslar", b =>
                {
                    b.Property<int>("DemirbasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DemirbasID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DemirbasId"));

                    b.Property<DateOnly?>("AlinmaTarihi")
                        .HasColumnType("date");

                    b.Property<string>("DemirbasAdi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DemirbasKodu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Kategori")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MevcutDurum")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Depoda");

                    b.Property<string>("Model")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SeriNo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("SirketId")
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    b.HasKey("DemirbasId")
                        .HasName("PK__Demirbas__0AED0CA271325D69");

                    b.HasIndex(new[] { "SeriNo" }, "UQ__Demirbas__1A24D142F6A8B3E4")
                        .IsUnique()
                        .HasFilter("[SeriNo] IS NOT NULL");

                    b.HasIndex(new[] { "SirketId", "DemirbasKodu" }, "UQ__Demirbas__908542280D3788E4")
                        .IsUnique();

                    b.ToTable("Demirbaslar", (string)null);
                });

            modelBuilder.Entity("CRM.Models.FaturaKalemleri", b =>
                {
                    b.Property<int>("FaturaKalemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FaturaKalemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FaturaKalemId"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("FaturaId")
                        .HasColumnType("int")
                        .HasColumnName("FaturaID");

                    b.Property<int?>("KdvOrani")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(18);

                    b.Property<decimal>("Miktar")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<int>("SirketId")
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    b.Property<int?>("StokKartiId")
                        .HasColumnType("int")
                        .HasColumnName("StokKartiID");

                    b.Property<decimal>("ToplamFiyat")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("FaturaKalemId")
                        .HasName("PK__FaturaKa__80EDE66AD521BDB7");

                    b.HasIndex("FaturaId");

                    b.HasIndex("SirketId");

                    b.HasIndex("StokKartiId");

                    b.ToTable("FaturaKalemleri", (string)null);
                });

            modelBuilder.Entity("CRM.Models.Faturalar", b =>
                {
                    b.Property<int>("FaturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FaturaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FaturaId"));

                    b.Property<decimal>("AraToplam")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CariHesapId")
                        .HasColumnType("int")
                        .HasColumnName("CariHesapID");

                    b.Property<string>("Durum")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Beklemede");

                    b.Property<string>("FaturaNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FaturaTipi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("GenelToplam")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("KdvTutari")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m);

                    b.Property<int?>("SiparisId")
                        .HasColumnType("int")
                        .HasColumnName("SiparisID");

                    b.Property<int>("SirketId")
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    b.Property<DateOnly>("Tarih")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("VadeTarihi")
                        .HasColumnType("date");

                    b.HasKey("FaturaId")
                        .HasName("PK__Faturala__84301C40B143F2AF");

                    b.HasIndex("CariHesapId");

                    b.HasIndex("SiparisId");

                    b.HasIndex(new[] { "SirketId", "FaturaNo" }, "UQ__Faturala__CD6D56F35F88FB29")
                        .IsUnique();

                    b.ToTable("Faturalar", (string)null);
                });

            modelBuilder.Entity("CRM.Models.FinansalHareketler", b =>
                {
                    b.Property<int>("HareketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HareketID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HareketId"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CariHesapId")
                        .HasColumnType("int")
                        .HasColumnName("CariHesapID");

                    b.Property<int?>("FaturaId")
                        .HasColumnType("int")
                        .HasColumnName("FaturaID");

                    b.Property<string>("HareketTipi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("SirketId")
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    b.Property<DateOnly>("Tarih")
                        .HasColumnType("date");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("HareketId")
                        .HasName("PK__Finansal__50654B06E424F44B");

                    b.HasIndex("CariHesapId");

                    b.HasIndex("FaturaId");

                    b.HasIndex("SirketId");

                    b.ToTable("FinansalHareketler", (string)null);
                });

            modelBuilder.Entity("CRM.Models.Kullanicilar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SirketID")
                        .HasColumnType("int");

                    b.Property<int?>("SirketlerSirketId")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("SirketlerSirketId");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("CRM.Models.PersonelDurumGecmisi", b =>
                {
                    b.Property<int>("DurumGecmisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DurumGecmisID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DurumGecmisId"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IslemYapanKullaniciId")
                        .HasColumnType("int")
                        .HasColumnName("IslemYapanKullaniciID");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int")
                        .HasColumnName("PersonelID");

                    b.Property<int>("SirketId")
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    b.Property<DateOnly>("Tarih")
                        .HasColumnType("date");

                    b.HasKey("DurumGecmisId")
                        .HasName("PK__Personel__EDDDD12E24668969");

                    b.HasIndex("IslemYapanKullaniciId");

                    b.HasIndex("PersonelId");

                    b.HasIndex("SirketId");

                    b.ToTable("PersonelDurumGecmisi", (string)null);
                });

            modelBuilder.Entity("CRM.Models.PersonelEkBilgileri", b =>
                {
                    b.Property<int>("EkBilgiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EkBilgiID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EkBilgiId"));

                    b.Property<string>("AcilDurumKontakAdi")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("AcilDurumKontakTelefonu")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int")
                        .HasColumnName("PersonelID");

                    b.Property<int>("SirketId")
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("EkBilgiId")
                        .HasName("PK__Personel__56BE018F99884029");

                    b.HasIndex("PersonelId");

                    b.HasIndex("SirketId");

                    b.ToTable("PersonelEkBilgileri", (string)null);
                });

            modelBuilder.Entity("CRM.Models.PersonelMaasBilgileri", b =>
                {
                    b.Property<int>("MaasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaasID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaasId"));

                    b.Property<string>("BankaHesapNo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateOnly>("BaslangicTarihi")
                        .HasColumnType("date");

                    b.Property<decimal>("MaasTutar")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("OdemePeriyodu")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Aylık");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int")
                        .HasColumnName("PersonelID");

                    b.Property<int>("SirketId")
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    b.HasKey("MaasId")
                        .HasName("PK__Personel__22D00316EA900DE7");

                    b.HasIndex("PersonelId");

                    b.HasIndex("SirketId");

                    b.ToTable("PersonelMaasBilgileri", (string)null);
                });

            modelBuilder.Entity("CRM.Models.PersonelNotlari", b =>
                {
                    b.Property<int>("NotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotId"));

                    b.Property<int?>("EkleyenKullaniciId")
                        .HasColumnType("int")
                        .HasColumnName("EkleyenKullaniciID");

                    b.Property<string>("NotMetni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int")
                        .HasColumnName("PersonelID");

                    b.Property<int>("SirketId")
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    b.Property<DateTime?>("Tarih")
                        .HasColumnType("datetime");

                    b.HasKey("NotId")
                        .HasName("PK__Personel__4FB200AAFCCFBE90");

                    b.HasIndex("EkleyenKullaniciId");

                    b.HasIndex("PersonelId");

                    b.HasIndex("SirketId");

                    b.ToTable("PersonelNotlari", (string)null);
                });

            modelBuilder.Entity("CRM.Models.Personeller", b =>
                {
                    b.Property<int>("PersonelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PersonelID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonelId"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Departman")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateOnly?>("IseGirisTarihi")
                        .HasColumnType("date");

                    b.Property<string>("Pozisyon")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("SirketId")
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TckimlikNo")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("TCKimlikNo");

                    b.HasKey("PersonelId")
                        .HasName("PK__Personel__0F0C57517A080A22");

                    b.HasIndex("SirketId");

                    b.HasIndex(new[] { "TckimlikNo" }, "UQ__Personel__7E1935ED4D4F1021")
                        .IsUnique()
                        .HasFilter("[TCKimlikNo] IS NOT NULL");

                    b.ToTable("Personeller", (string)null);
                });

            modelBuilder.Entity("CRM.Models.Roller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("RolDerecesi")
                        .HasColumnType("int");

                    b.Property<int>("SirketId")
                        .HasColumnType("int");

                    b.Property<int?>("SirketlerSirketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.HasIndex("SirketlerSirketId");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("CRM.Models.SiparisKalemleri", b =>
                {
                    b.Property<int>("SiparisKalemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SiparisKalemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiparisKalemId"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Miktar")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<int>("SiparisId")
                        .HasColumnType("int")
                        .HasColumnName("SiparisID");

                    b.Property<int>("SirketId")
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    b.Property<int?>("StokKartiId")
                        .HasColumnType("int")
                        .HasColumnName("StokKartiID");

                    b.Property<decimal>("ToplamFiyat")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("SiparisKalemId")
                        .HasName("PK__SiparisK__66721F4222BFDCD4");

                    b.HasIndex("SiparisId");

                    b.HasIndex("SirketId");

                    b.HasIndex("StokKartiId");

                    b.ToTable("SiparisKalemleri", (string)null);
                });

            modelBuilder.Entity("CRM.Models.Siparisler", b =>
                {
                    b.Property<int>("SiparisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SiparisID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiparisId"));

                    b.Property<int>("CariHesapId")
                        .HasColumnType("int")
                        .HasColumnName("CariHesapID");

                    b.Property<string>("Durum")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Açık");

                    b.Property<string>("SiparisNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SiparisTipi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("SirketId")
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    b.Property<DateOnly>("Tarih")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("TeslimTarihi")
                        .HasColumnType("date");

                    b.HasKey("SiparisId")
                        .HasName("PK__Siparisl__C3F03BDD6DC41C10");

                    b.HasIndex("CariHesapId");

                    b.HasIndex(new[] { "SirketId", "SiparisNo" }, "UQ__Siparisl__5911603E61DF7F78")
                        .IsUnique();

                    b.ToTable("Siparisler", (string)null);
                });

            modelBuilder.Entity("CRM.Models.Sirketler", b =>
                {
                    b.Property<int>("SirketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SirketId"));

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("SirketAdi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("VergiNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("SirketId")
                        .HasName("PK__Sirketle__E52E4AAEDE706344");

                    b.HasIndex(new[] { "VergiNo" }, "UQ__Sirketle__3849AC29469978A2")
                        .IsUnique()
                        .HasFilter("[VergiNo] IS NOT NULL");

                    b.HasIndex(new[] { "SirketAdi" }, "UQ__Sirketle__DBF43D50D8F3DB30")
                        .IsUnique();

                    b.ToTable("Sirketler", (string)null);
                });

            modelBuilder.Entity("CRM.Models.StokHareketleri", b =>
                {
                    b.Property<int>("StokHareketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StokHareketID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StokHareketId"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("FaturaKalemId")
                        .HasColumnType("int")
                        .HasColumnName("FaturaKalemID");

                    b.Property<string>("HareketTipi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Miktar")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<int?>("SiparisKalemId")
                        .HasColumnType("int")
                        .HasColumnName("SiparisKalemID");

                    b.Property<int>("SirketId")
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    b.Property<int>("StokKartiId")
                        .HasColumnType("int")
                        .HasColumnName("StokKartiID");

                    b.Property<DateTime?>("Tarih")
                        .HasColumnType("datetime");

                    b.HasKey("StokHareketId")
                        .HasName("PK__StokHare__8F9B28C0FCCE4B94");

                    b.HasIndex("FaturaKalemId");

                    b.HasIndex("SiparisKalemId");

                    b.HasIndex("SirketId");

                    b.HasIndex("StokKartiId");

                    b.ToTable("StokHareketleri", (string)null);
                });

            modelBuilder.Entity("CRM.Models.StokKartlari", b =>
                {
                    b.Property<int>("StokKartiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StokKartiID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StokKartiId"));

                    b.Property<string>("Birim")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("MevcutMiktar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 3)")
                        .HasDefaultValue(0m);

                    b.Property<int>("SirketId")
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    b.Property<string>("StokAdi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StokKodu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("StokKartiId")
                        .HasName("PK__StokKart__03151E01ACE6C3BE");

                    b.HasIndex(new[] { "SirketId", "StokKodu" }, "UQ__StokKart__01A1F6E24D7971B0")
                        .IsUnique();

                    b.ToTable("StokKartlari", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CRM.Models.Ajanda", b =>
                {
                    b.HasOne("CRM.Models.Kullanicilar", "OlusturanKullanici")
                        .WithMany()
                        .HasForeignKey("OlusturanKullaniciId");

                    b.Navigation("OlusturanKullanici");
                });

            modelBuilder.Entity("CRM.Models.CariHesaplar", b =>
                {
                    b.HasOne("CRM.Models.Sirketler", "Sirket")
                        .WithMany("CariHesaplars")
                        .HasForeignKey("SirketId")
                        .IsRequired()
                        .HasConstraintName("FK__CariHesap__Sirke__078C1F06");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("CRM.Models.Demirbaslar", b =>
                {
                    b.HasOne("CRM.Models.Sirketler", "Sirket")
                        .WithMany("Demirbaslars")
                        .HasForeignKey("SirketId")
                        .IsRequired()
                        .HasConstraintName("FK__Demirbasl__Sirke__43A1090D");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("CRM.Models.FaturaKalemleri", b =>
                {
                    b.HasOne("CRM.Models.Faturalar", "Fatura")
                        .WithMany("FaturaKalemleris")
                        .HasForeignKey("FaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__FaturaKal__Fatur__251C81ED");

                    b.HasOne("CRM.Models.Sirketler", "Sirket")
                        .WithMany("FaturaKalemleris")
                        .HasForeignKey("SirketId")
                        .IsRequired()
                        .HasConstraintName("FK__FaturaKal__Sirke__2610A626");

                    b.HasOne("CRM.Models.StokKartlari", "StokKarti")
                        .WithMany("FaturaKalemleris")
                        .HasForeignKey("StokKartiId")
                        .HasConstraintName("fk_fatura_stok");

                    b.Navigation("Fatura");

                    b.Navigation("Sirket");

                    b.Navigation("StokKarti");
                });

            modelBuilder.Entity("CRM.Models.Faturalar", b =>
                {
                    b.HasOne("CRM.Models.CariHesaplar", "CariHesap")
                        .WithMany("Faturalars")
                        .HasForeignKey("CariHesapId")
                        .IsRequired()
                        .HasConstraintName("FK__Faturalar__CariH__2057CCD0");

                    b.HasOne("CRM.Models.Siparisler", "Siparis")
                        .WithMany("Faturalars")
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Faturalar__Sipar__214BF109");

                    b.HasOne("CRM.Models.Sirketler", "Sirket")
                        .WithMany("Faturalars")
                        .HasForeignKey("SirketId")
                        .IsRequired()
                        .HasConstraintName("FK__Faturalar__Sirke__1F63A897");

                    b.Navigation("CariHesap");

                    b.Navigation("Siparis");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("CRM.Models.FinansalHareketler", b =>
                {
                    b.HasOne("CRM.Models.CariHesaplar", "CariHesap")
                        .WithMany("FinansalHareketlers")
                        .HasForeignKey("CariHesapId")
                        .HasConstraintName("FK__FinansalH__CariH__0B5CAFEA");

                    b.HasOne("CRM.Models.Faturalar", "Fatura")
                        .WithMany("FinansalHareketlers")
                        .HasForeignKey("FaturaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_finans_fatura");

                    b.HasOne("CRM.Models.Sirketler", "Sirket")
                        .WithMany("FinansalHareketlers")
                        .HasForeignKey("SirketId")
                        .IsRequired()
                        .HasConstraintName("FK__FinansalH__Sirke__0A688BB1");

                    b.Navigation("CariHesap");

                    b.Navigation("Fatura");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("CRM.Models.Kullanicilar", b =>
                {
                    b.HasOne("CRM.Models.Sirketler", null)
                        .WithMany("Kullanicilars")
                        .HasForeignKey("SirketlerSirketId");
                });

            modelBuilder.Entity("CRM.Models.PersonelDurumGecmisi", b =>
                {
                    b.HasOne("CRM.Models.Kullanicilar", "IslemYapanKullanici")
                        .WithMany()
                        .HasForeignKey("IslemYapanKullaniciId");

                    b.HasOne("CRM.Models.Personeller", "Personel")
                        .WithMany("PersonelDurumGecmisis")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PersonelD__Perso__72910220");

                    b.HasOne("CRM.Models.Sirketler", "Sirket")
                        .WithMany("PersonelDurumGecmisis")
                        .HasForeignKey("SirketId")
                        .IsRequired()
                        .HasConstraintName("FK__PersonelD__Sirke__73852659");

                    b.Navigation("IslemYapanKullanici");

                    b.Navigation("Personel");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("CRM.Models.PersonelEkBilgileri", b =>
                {
                    b.HasOne("CRM.Models.Personeller", "Personel")
                        .WithMany("PersonelEkBilgileris")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PersonelE__Perso__7C1A6C5A");

                    b.HasOne("CRM.Models.Sirketler", "Sirket")
                        .WithMany("PersonelEkBilgileris")
                        .HasForeignKey("SirketId")
                        .IsRequired()
                        .HasConstraintName("FK__PersonelE__Sirke__7D0E9093");

                    b.Navigation("Personel");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("CRM.Models.PersonelMaasBilgileri", b =>
                {
                    b.HasOne("CRM.Models.Personeller", "Personel")
                        .WithMany("PersonelMaasBilgileris")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PersonelM__Perso__7849DB76");

                    b.HasOne("CRM.Models.Sirketler", "Sirket")
                        .WithMany("PersonelMaasBilgileris")
                        .HasForeignKey("SirketId")
                        .IsRequired()
                        .HasConstraintName("FK__PersonelM__Sirke__793DFFAF");

                    b.Navigation("Personel");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("CRM.Models.PersonelNotlari", b =>
                {
                    b.HasOne("CRM.Models.Kullanicilar", "EkleyenKullanici")
                        .WithMany()
                        .HasForeignKey("EkleyenKullaniciId");

                    b.HasOne("CRM.Models.Personeller", "Personel")
                        .WithMany("PersonelNotlaris")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PersonelN__Perso__00DF2177");

                    b.HasOne("CRM.Models.Sirketler", "Sirket")
                        .WithMany("PersonelNotlaris")
                        .HasForeignKey("SirketId")
                        .IsRequired()
                        .HasConstraintName("FK__PersonelN__Sirke__01D345B0");

                    b.Navigation("EkleyenKullanici");

                    b.Navigation("Personel");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("CRM.Models.Personeller", b =>
                {
                    b.HasOne("CRM.Models.Sirketler", "Sirket")
                        .WithMany("Personellers")
                        .HasForeignKey("SirketId")
                        .IsRequired()
                        .HasConstraintName("FK__Personell__Sirke__6FB49575");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("CRM.Models.Roller", b =>
                {
                    b.HasOne("CRM.Models.Sirketler", null)
                        .WithMany("Rollers")
                        .HasForeignKey("SirketlerSirketId");
                });

            modelBuilder.Entity("CRM.Models.SiparisKalemleri", b =>
                {
                    b.HasOne("CRM.Models.Siparisler", "Siparis")
                        .WithMany("SiparisKalemleris")
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__SiparisKa__Sipar__13F1F5EB");

                    b.HasOne("CRM.Models.Sirketler", "Sirket")
                        .WithMany("SiparisKalemleris")
                        .HasForeignKey("SirketId")
                        .IsRequired()
                        .HasConstraintName("FK__SiparisKa__Sirke__14E61A24");

                    b.HasOne("CRM.Models.StokKartlari", "StokKarti")
                        .WithMany("SiparisKalemleris")
                        .HasForeignKey("StokKartiId")
                        .HasConstraintName("fk_siparis_stok");

                    b.Navigation("Siparis");

                    b.Navigation("Sirket");

                    b.Navigation("StokKarti");
                });

            modelBuilder.Entity("CRM.Models.Siparisler", b =>
                {
                    b.HasOne("CRM.Models.CariHesaplar", "CariHesap")
                        .WithMany("Siparislers")
                        .HasForeignKey("CariHesapId")
                        .IsRequired()
                        .HasConstraintName("FK__Siparisle__CariH__11158940");

                    b.HasOne("CRM.Models.Sirketler", "Sirket")
                        .WithMany("Siparislers")
                        .HasForeignKey("SirketId")
                        .IsRequired()
                        .HasConstraintName("FK__Siparisle__Sirke__10216507");

                    b.Navigation("CariHesap");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("CRM.Models.StokHareketleri", b =>
                {
                    b.HasOne("CRM.Models.FaturaKalemleri", "FaturaKalem")
                        .WithMany("StokHareketleris")
                        .HasForeignKey("FaturaKalemId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__StokHarek__Fatur__2BC97F7C");

                    b.HasOne("CRM.Models.SiparisKalemleri", "SiparisKalem")
                        .WithMany("StokHareketleris")
                        .HasForeignKey("SiparisKalemId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__StokHarek__Sipar__2CBDA3B5");

                    b.HasOne("CRM.Models.Sirketler", "Sirket")
                        .WithMany("StokHareketleris")
                        .HasForeignKey("SirketId")
                        .IsRequired()
                        .HasConstraintName("FK__StokHarek__Sirke__29E1370A");

                    b.HasOne("CRM.Models.StokKartlari", "StokKarti")
                        .WithMany("StokHareketleris")
                        .HasForeignKey("StokKartiId")
                        .IsRequired()
                        .HasConstraintName("FK__StokHarek__StokK__2AD55B43");

                    b.Navigation("FaturaKalem");

                    b.Navigation("SiparisKalem");

                    b.Navigation("Sirket");

                    b.Navigation("StokKarti");
                });

            modelBuilder.Entity("CRM.Models.StokKartlari", b =>
                {
                    b.HasOne("CRM.Models.Sirketler", "Sirket")
                        .WithMany("StokKartlaris")
                        .HasForeignKey("SirketId")
                        .IsRequired()
                        .HasConstraintName("FK__StokKartl__Sirke__19AACF41");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("CRM.Models.Roller", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("CRM.Models.Kullanicilar", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("CRM.Models.Kullanicilar", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("CRM.Models.Roller", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRM.Models.Kullanicilar", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("CRM.Models.Kullanicilar", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CRM.Models.CariHesaplar", b =>
                {
                    b.Navigation("Faturalars");

                    b.Navigation("FinansalHareketlers");

                    b.Navigation("Siparislers");
                });

            modelBuilder.Entity("CRM.Models.FaturaKalemleri", b =>
                {
                    b.Navigation("StokHareketleris");
                });

            modelBuilder.Entity("CRM.Models.Faturalar", b =>
                {
                    b.Navigation("FaturaKalemleris");

                    b.Navigation("FinansalHareketlers");
                });

            modelBuilder.Entity("CRM.Models.Personeller", b =>
                {
                    b.Navigation("PersonelDurumGecmisis");

                    b.Navigation("PersonelEkBilgileris");

                    b.Navigation("PersonelMaasBilgileris");

                    b.Navigation("PersonelNotlaris");
                });

            modelBuilder.Entity("CRM.Models.SiparisKalemleri", b =>
                {
                    b.Navigation("StokHareketleris");
                });

            modelBuilder.Entity("CRM.Models.Siparisler", b =>
                {
                    b.Navigation("Faturalars");

                    b.Navigation("SiparisKalemleris");
                });

            modelBuilder.Entity("CRM.Models.Sirketler", b =>
                {
                    b.Navigation("CariHesaplars");

                    b.Navigation("Demirbaslars");

                    b.Navigation("FaturaKalemleris");

                    b.Navigation("Faturalars");

                    b.Navigation("FinansalHareketlers");

                    b.Navigation("Kullanicilars");

                    b.Navigation("PersonelDurumGecmisis");

                    b.Navigation("PersonelEkBilgileris");

                    b.Navigation("PersonelMaasBilgileris");

                    b.Navigation("PersonelNotlaris");

                    b.Navigation("Personellers");

                    b.Navigation("Rollers");

                    b.Navigation("SiparisKalemleris");

                    b.Navigation("Siparislers");

                    b.Navigation("StokHareketleris");

                    b.Navigation("StokKartlaris");
                });

            modelBuilder.Entity("CRM.Models.StokKartlari", b =>
                {
                    b.Navigation("FaturaKalemleris");

                    b.Navigation("SiparisKalemleris");

                    b.Navigation("StokHareketleris");
                });
#pragma warning restore 612, 618
        }
    }
}
